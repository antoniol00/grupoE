package es.uma.informatica.sii.web.tests;

// Generated by Selenium IDE
import static org.hamcrest.CoreMatchers.is;
import static org.junit.Assert.assertThat;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.TimeUnit;

import org.junit.After;
import org.junit.Before;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import es.uma.informatica.sii.anotaciones.Requisitos;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class AsignacionIntegracion {
	private WebDriver driver;
	private Map<String, Object> vars;
	JavascriptExecutor js;

	private static String URL_ALUMNOS = "/home/alumno/git/grupoE/grupoE-ejb/DATOS/alumnos.csv";
	private static String URL_ASIGNATURAS = "/home/alumno/git/grupoE/grupoE-ejb/DATOS/asignaturas.xlsx";

	@Before
	public void setUp() {
		driver = new ChromeDriver();
		js = (JavascriptExecutor) driver;
		vars = new HashMap<String, Object>();
		driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);
		driver.manage().timeouts().pageLoadTimeout(1, TimeUnit.MINUTES);
		driver.manage().window().setSize(new Dimension(1440,900));
	}

	@After
	public void tearDown() {
		driver.quit();
	}

	// Diseño de pagina con elementos principales para realizar asignacion
	@Requisitos({ "RF5.3" })
	@Test
	public void test24DisenoInicialAsignacion() {
		driver.get("http://localhost:8080/grupoE-war/faces/asignacion.xhtml");
		assertThat(driver.getTitle(), is("Asignacion"));
		assertThat(driver.findElement(By.id("titulo_pagina")).getText(), is("Asignacion provisional"));
		{
			List<WebElement> elements = driver.findElements(By.id("j_idt16:asignacion"));
			assert (elements.size() > 0);
		}
		{
			List<WebElement> elements = driver.findElements(By.id("j_idt16:borrarTodo"));
			assert (elements.size() > 0);
		}
		{
			List<WebElement> elements = driver.findElements(By.id("j_idt16:crearPDF"));
			assert (elements.size() > 0);
		}
		assertThat(driver.findElement(By.id("subtitulo")).getText(), is("Comprobador de colisiones"));
		{
			List<WebElement> elements = driver.findElements(By.id("selector_colisiones:tipo"));
			assert (elements.size() > 0);
		}
		{
			List<WebElement> elements = driver.findElements(By.id("selector_colisiones:boton11"));
			assert (elements.size() > 0);
		}
		{
			List<WebElement> elements = driver.findElements(By.id("j_idt16:crearExcel"));
			assert (elements.size() > 0);
		}
		assertThat(driver.findElement(By.cssSelector(".formatoHeader:nth-child(1)")).getText(), is("Expediente"));
		assertThat(driver.findElement(By.cssSelector(".formatoHeader:nth-child(2)")).getText(), is("DNI"));
		assertThat(driver.findElement(By.cssSelector(".formatoHeader:nth-child(3)")).getText(), is("Nombre"));
		assertThat(driver.findElement(By.cssSelector(".formatoHeader:nth-child(4)")).getText(), is("Curso"));
		assertThat(driver.findElement(By.cssSelector(".formatoHeader:nth-child(5)")).getText(), is("Asignatura"));
		assertThat(driver.findElement(By.cssSelector(".formatoHeader:nth-child(6)")).getText(), is("Grupo"));
	}

	// La asignacion se realiza de forma correcta teniendo importados tanto la
	// informacion de alumnos, asignaturas y grupos disponibles
	@Requisitos({ "RF5.2", "RF5.3" })
	@Test
	public void test25AsignacionCorrecta() {
		driver.get("http://localhost:8080/grupoE-war/faces/alumnos.xhtml");
		driver.findElement(By.id("j_idt16:file-id")).sendKeys(URL_ALUMNOS);
		driver.findElement(By.id("j_idt16:upload")).click();
		assertThat(driver.switchTo().alert().getText(), is(
				"La subida de archivos debe hacerse desde alumnos.csv. Se cargaran los datos de ALUMNOS, EXPEDIENTES Y MATRICULAS. Confirmar?"));
		driver.switchTo().alert().accept();
		{
			WebDriverWait wait = new WebDriverWait(driver, 40);
			wait.until(ExpectedConditions.textToBe(By.id("j_idt18:0:dni"), "00128979G"));
		}
		driver.get("http://localhost:8080/grupoE-war/faces/asignaturas.xhtml");
		driver.findElement(By.id("j_idt16:file-id")).sendKeys(URL_ASIGNATURAS);
		driver.findElement(By.id("j_idt16:upload")).click();
		{
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.textToBe(By.id("j_idt16:mensaje_subida"), "Importación correcta"));
		}
		driver.get("http://localhost:8080/grupoE-war/faces/asignacion.xhtml");
		driver.findElement(By.id("j_idt16:asignacion")).click();
		assertThat(driver.switchTo().alert().getText(), is(
				"Compruebe que alumnos, asignaturas y grupos han sido introducidos en el sistema. Continuar con la asignacion?"));
		driver.switchTo().alert().accept();
		{
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.textToBe(By.id("j_idt16:mensajeSubida"), "Asignacion correcta"));
		}
		assertThat(driver.findElement(By.id("j_idt21:0:expediente")).getText(), is("104100019"));
		assertThat(driver.findElement(By.id("j_idt21:1019:expediente")).getText(), is("105601441"));
	}

	// Un alumno puede modificar su grupo por un fallo o ajuste de grupos o a raiz
	// de una peticion realizada y documentada en el menu de peticiones
	@Requisitos({ "RF4.2", "RF2.2" })
	@Test
	public void test26ModificarGrupoAlumno() {
		BaseDeDatos.modificaAsignacion();
		driver.get("http://localhost:8080/grupoE-war/faces/asignaturas.xhtml");
		assertThat(driver.findElement(By.id("j_idt25:4:codigo")).getText(), is("105"));
		assertThat(driver.findElement(By.id("j_idt25:4:grupos_asignados")).getText(), is("(1 B) (1 C)"));
		driver.findElement(By.id("j_idt6:Asignacion_grupos")).click();
		assertThat(driver.findElement(By.id("j_idt21:4:asignatura")).getText(), is("105"));
		assertThat(driver.findElement(By.id("j_idt21:4:grupo")).getText(), is("II1A"));
		{
			List<WebElement> elements = driver
					.findElements(By.cssSelector(".formatoFilaImpar:nth-child(5) #editar_asignacion"));
			assert (elements.size() > 0);
		}
		driver.findElement(By.cssSelector(".formatoFilaImpar:nth-child(5) #editar_asignacion")).click();
		{
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.textToBe(
					By.cssSelector("#j_idt21\\3A 4\\3Auser-form\\3A cambio_grupo td:nth-child(1) > label"), "1 B"));
		}
		assertThat(driver
				.findElement(By.cssSelector("#j_idt21\\3A 4\\3Auser-form\\3A cambio_grupo td:nth-child(2) > label"))
				.getText(), is("1 C"));
		driver.findElement(By.cssSelector("#j_idt21\\3A 4\\3Auser-form\\3A cambio_grupo td:nth-child(1) > label"))
				.click();
		driver.findElement(By.id("j_idt21:4:user-form:enviar")).click();
		{
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.textToBe(By.id("j_idt21:4:grupo"), "II1B"));
		}
		assertThat(driver.findElement(By.id("j_idt21:4:asignatura")).getText(), is("105"));
	}

	// La vista tiene un selector con todos los estudiantes que tienen alguna
	// asignacion activa. Pulsando en comprobar, devuelve si el alumno tiene alguna
	// colision o no. Probamos que no existe colision cuando todas las asignaturas
	// estan matriculadas en un grupo de mañana o de tarde. Al cambiar un grupo
	// asignado a un
	// grupo de tarde, la comprobacion de aviso de colisiones indica que hay una
	// colision para ese alumno
	@Requisitos({ "RF5.1" })
	@Test
	public void test27AvisoColisiones() {
		driver.get("http://localhost:8080/grupoE-war/faces/asignacion.xhtml");
		{
			WebElement dropdown = driver.findElement(By.id("selector_colisiones:tipo"));
			dropdown.findElement(By.xpath("//option[. = '45496431S, Aimee Saenz Caban']")).click();
		}
		driver.findElement(By.id("selector_colisiones:boton11")).click();
		{
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.textToBe(By.id("selector_colisiones:textoAlumnoEscogido"), "NO"));
		}
		driver.findElement(By.cssSelector(".formatoFilaImpar:nth-child(15) #editar_asignacion")).click();
		driver.findElement(By.cssSelector("#j_idt21\\3A 14\\3Auser-form\\3A cambio_grupo td:nth-child(2) > label"))
				.click();
		driver.findElement(By.id("j_idt21:14:user-form:enviar")).click();
		{
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.textToBe(By.id("j_idt21:14:grupo"), "II1C"));
		}
		{
			WebElement dropdown = driver.findElement(By.id("selector_colisiones:tipo"));
			dropdown.findElement(By.xpath("//option[. = '45496431S, Aimee Saenz Caban']")).click();
		}
		driver.findElement(By.id("selector_colisiones:boton11")).click();
		{
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.textToBe(By.id("selector_colisiones:textoAlumnoEscogido"), "SI"));
		}
	}

	// Vaciar la asignacion actual hace que no aparezca ningun elemento en la vista
	// referido a las asignaciones
	@Requisitos({ "RF5.3" })
	@Test
	public void test28VaciadoAsignacion() {
		driver.get("http://localhost:8080/grupoE-war/faces/asignacion.xhtml");
		driver.findElement(By.id("j_idt16:borrarTodo")).click();
		{
			WebDriverWait wait = new WebDriverWait(driver, 30);
			wait.until(ExpectedConditions.textToBe(By.id("j_idt16:mensajeSubida"), "Asignacion borrada completamente"));
		}
		{
			List<WebElement> elements = driver.findElements(By.id("j_idt21:0:expediente"));
			assert (elements.size() == 0);
		}
	}
}
